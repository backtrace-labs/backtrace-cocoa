name: Deploy to Cocoapods

on:
  push:
    tags: '[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build-cocoapods:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: sh scripts/install.sh
      - name: Run tests
        run: sh scripts/test.sh
      - name: Deploy to Cocoapods
        run: sh scripts/deploy.sh
        env:
         COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

  build-dynamic-frameworks:
    runs-on: macos-latest
    needs: build-cocoapods
    
    strategy:
      matrix:
          ENABLE_BITCODE: [YES, NO]
          SWIFT_EMBEDDED: [YES, NO]

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Install cocoapods and rome
      run: gem install cocoapods cocoapods-rome
      
    - name: Run pod install with Podfile from workflows directory
      run: cp .github/workflows/Podfile . && pod install
      env:
        ENABLE_BITCODE: ${{ matrix.ENABLE_BITCODE }}
        SWIFT_EMBEDDED: ${{ matrix.SWIFT_EMBEDDED }}
        BACKTRACE_VERSION: ${{ github.ref_name }}

    - name: Tar files to preserve file permissions
      run: tar -cvzf Archive_DynamicFramework_iOS_Bitcode${{ matrix.ENABLE_BITCODE }}_SwiftEmbedded${{ matrix.SWIFT_EMBEDDED }}_${{ github.ref_name }}.tar.gz Rome/ dSYM/

    - uses: actions/upload-artifact@v3
      with:
        name: Archive_DynamicFramework_iOS_Bitcode${{ matrix.ENABLE_BITCODE }}_SwiftEmbedded${{ matrix.SWIFT_EMBEDDED }}_${{ github.ref_name }}
        path: Archive_DynamicFramework_iOS_Bitcode${{ matrix.ENABLE_BITCODE }}_SwiftEmbedded${{ matrix.SWIFT_EMBEDDED }}_${{ github.ref_name }}.tar.gz
        
  upload-to-github-release:
    runs-on: ubuntu-latest
    needs: build-dynamic-frameworks

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        id: download
        with:
          path: artifacts/

      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ steps.download.outputs.download-path }}
          draft: true
          verbose: env.ACTIONS_STEP_DEBUG
